# ---- 1. build stage ----
FROM node:20 AS builder
RUN apt-get update && apt-get install -y git jq curl bash
WORKDIR /app
RUN curl -O https://raw.githubusercontent.com/protomodule/ops/main/templates/nginx/entrypoint.sh && \
    chmod ugo+x entrypoint.sh && \
    curl -LSso ops.zip https://github.com/protomodule/ops/archive/refs/heads/main.zip && \
    unzip ops.zip && \
    mv ops-main/templates/nginx . && \
    rm -rf ops-main ops.zip
COPY yarn.lock package.json ./
RUN yarn install
COPY . ./
RUN /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/protomodule/ops/main/helpers/generate-version.sh)" -- -j -s version && \
    /bin/bash -c "source ./version.sh && echo \"$VERSION\" > __v" && \
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/protomodule/ops/main/helpers/generate-changelog.sh)" -- -x
RUN yarn run build

# ---- 2. release stage ----
FROM nginx:stable-alpine
RUN apk add apache2-utils

COPY --from=builder /app/build              /usr/share/nginx/html
COPY --from=builder /app/version.json       /usr/share/nginx/html/version
COPY --from=builder /app/__v                /usr/share/nginx/html/__v
COPY --from=builder /app/changelog.html     /usr/share/nginx/html/changelog.html
COPY --from=builder /app/entrypoint.sh      /

# Nginx config
RUN rm -rf /etc/nginx/conf.d
COPY --from=builder /app/nginx/             /etc/nginx

WORKDIR /usr/share/nginx/html

ENTRYPOINT ["/entrypoint.sh"]
CMD ["nginx", "-g", "daemon off;"]
