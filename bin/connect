#!/usr/bin/env bash

#      ____                            _   
#     / ___|___  _ __  _ __   ___  ___| |_ 
#    | |   / _ \| '_ \| '_ \ / _ \/ __| __|
#    | |__| (_) | | | | | | |  __/ (__| |_ 
#     \____\___/|_| |_|_| |_|\___|\___|\__|
#   
#        W r a p p e r   f o r   S S H                                       

# Input parameters
TF_APPLICATION=${1:-unspecified}
TF_PARAMS=${@:2}

# Prepare shell for script execution
set -Eeo pipefail
trap cleanup SIGINT SIGTERM ERR EXIT
[[ "$0" != "$BASH_SOURCE" ]] && EXIT=return || EXIT=exit
cleanup() {
  trap - SIGINT SIGTERM ERR EXIT
  # script cleanup here
}

setup_colors() {
  if [[ -t 2 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
    NOFORMAT='\033[0m' RED='\033[0;31m\033[1m' GREEN='\033[0;32m\033[1m' ORANGE='\033[0;33m\033[1m' BLUE='\033[0;34m\033[1m' PURPLE='\033[0;35m\033[1m' CYAN='\033[0;36m\033[1m' YELLOW='\033[1;33m\033[1m'
  else
    NOFORMAT='' RED='' GREEN='' ORANGE='' BLUE='' PURPLE='' CYAN='' YELLOW=''
  fi
}

msg() {
  echo >&2 -e "${1-}"
}

setup_colors

if [[ -z $TF_APPLICATION || "$TF_APPLICATION" == "unspecified" ]]; then
  msg "üõë   Please specify the Terraform project to run: $GREEN./terraform <PROJECT> plan ...$NOFORMAT"
  $EXIT 1
fi

# Check if application directory exists
if [[ ! -d $(pwd)/applications/$TF_APPLICATION ]]; then
  msg "üõë   Application $RED$TF_APPLICATION$NOFORMAT not found"
  $EXIT 1
fi

msg "üåç   Checking for instances of ${BLUE}$TF_APPLICATION${NOFORMAT}"

export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-eu-central-1}
INSTANCES=$(aws ec2 describe-instances --filters "Name=tag:Application,Values=$TF_APPLICATION" "Name=instance-state-name,Values=running")
INDEX=0
while IFS=$"\n" read -r INSTANCE; do
    INSTANCE_NAMES[$INDEX]="$(echo "$INSTANCE" | jq -r '.Tags | .[] | select(.Key == "Name") | .Value') ($(echo "$INSTANCE" | jq -r '.InstanceId') / $(echo "$INSTANCE" | jq -r '.LaunchTime'))"
    INSTANCE_ADDRESS[$INDEX]=$(echo "$INSTANCE" | jq -r '.PublicDnsName')
    INDEX=$(($INDEX+1))
done < <(echo $INSTANCES | jq -c ".Reservations[].Instances[]")

msg "üîé   Found instances:"
msg ""
PS3="Please select an instance: "
select opt in "${INSTANCE_NAMES[@]}"
do
  break
done

INDEX=`echo ${INSTANCE_NAMES[@]/$opt//} | cut -d/ -f1 | wc -w | tr -d ' '`
ADDRESS=${INSTANCE_ADDRESS[$INDEX]}

# User input validation
if [[ -z $ADDRESS ]]; then
  msg ""
  msg "üõë   Selection not valid"
  $EXIT 1
fi

msg ""
msg "üîë   Retrieving private key from Terraform"
SSH_PRIVATE_KEY=$(./terraform $TF_APPLICATION output -raw SSH_PRIVATE_KEY)
msg "üìû   Connecting to instance $HL$opt$NC"
msg ""

docker run --rm -it --platform=linux/amd64 kroniak/ssh-client \
  ssh-agent bash -c "echo \"$SSH_PRIVATE_KEY\" | tr -d '\r' | ssh-add - && ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${SSH_USER:-admin}@$ADDRESS"

msg ""
msg "üëã   Bye"
