#!/usr/bin/env bash


#     ____            _             
#    |  _ \ __ _  ___| | _____ _ __ 
#    | |_) / _` |/ __| |/ / _ \ '__|
#    |  __/ (_| | (__|   <  __/ |   
#    |_|   \__,_|\___|_|\_\___|_|   
#                                                     
#  W R A P P E R   f o r   D o c k e r

# Input parameters
PKR_APPLICATION=${1:-unspecified}
PKR_PARAMS=${@:3}
PKR_CMD=${2:-}
PKR_VERSION=${PACKER_VERSION:-latest}


# Prepare shell for script execution
set -Eeo pipefail
trap cleanup SIGINT SIGTERM ERR EXIT
[[ "$0" != "$BASH_SOURCE" ]] && EXIT=return || EXIT=exit
cleanup() {
  trap - SIGINT SIGTERM ERR EXIT
  # script cleanup here
}

setup_colors() {
  if [[ -t 2 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
    NOFORMAT='\033[0m' RED='\033[0;31m\033[1m' GREEN='\033[0;32m\033[1m' ORANGE='\033[0;33m\033[1m' BLUE='\033[0;34m\033[1m' PURPLE='\033[0;35m\033[1m' CYAN='\033[0;36m\033[1m' YELLOW='\033[1;33m\033[1m'
  else
    NOFORMAT='' RED='' GREEN='' ORANGE='' BLUE='' PURPLE='' CYAN='' YELLOW=''
  fi
}

msg() {
  if ! [[ "$TF_CMD" == "output" ]]; then
    echo >&2 -e "${1-}"
  fi
}

setup_colors

# Load names of environment variables for secrets from file
IFS=$'\n' SECRETS=($(cat .tf_envs))

# Input validation
if [[ -z $CUSTOMER ]]; then
  msg "🛑   Please specify ${GREEN}CUSTOMER$NOFORMAT as an environment variable"
  $EXIT 1
fi

if [[ -z $PKR_APPLICATION || "$PKR_APPLICATION" == "unspecified" ]]; then
  msg "🛑   Please specify an application folder to run: $GREEN./packer <APPLICATION> build ...$NOFORMAT"
  $EXIT 1
fi

# Check if application directory exists
if [[ ! -d $(pwd)/applications/$PKR_APPLICATION ]]; then
  msg "🛑   Application $RED$PKR_APPLICATION$NOFORMAT not found"
  $EXIT 1
fi

# Try loading credentials from keychain
for secret in "${SECRETS[@]}"
do
  # Try loading AWS credentials from keychain
  if [[ -z ${!secret} ]] && [[ "$OSTYPE" == "darwin"* ]]; then
    msg "🔐   Trying to retrieve $GREEN$(tput bold)${secret}$NOFORMAT$(tput sgr0) for $CUSTOMER from keychain"
    declare -x $secret="$(security find-generic-password -s "$CUSTOMER - Cloud IAC" -a "$secret" -w 2> /dev/null || true)"
  fi

  # Fail if secret is still not set
  if [[ -z ${!secret} ]]; then
    msg "🛑   $RED$(tput bold)${secret}$NOFORMAT$(tput sgr0) for not found"
    $EXIT 1
  fi
done


# Wrapper function to run Packer in Docker
packer() {
  # Construct a string with all environment secrets
  env_string=""
  for item in "${SECRETS[@]}"; do
      env_string+=" -e $item"
  done

  # Run Terraform in Docker
  mkdir -p logs
  RUN="docker run --rm \
    -v $(pwd)/applications/$PKR_APPLICATION/packer:/workspace \
    -v $(pwd)/applications/$PKR_APPLICATION/packer/.config:/root/.config\
    -w /workspace \
    $env_string \
    -it \
    hashicorp/packer:${PKR_VERSION} $@ 2>&1 | tee \"logs/$PKR_APPLICATION-$(date '+%Y-%m-%d_%H-%M-%S')-${PKR_CMD}.log\""
  eval $RUN
}

msg "🐳   Running Packer in Docker ..."
msg "🗂    Opening project ${BLUE}$PKR_APPLICATION${NOFORMAT}"

# Run Packer with given parameters
msg "📦   Running Packer command: ${GREEN}$PKR_CMD $PKR_PARAMS${NOFORMAT}"
packer $PKR_CMD $PKR_PARAMS

msg ""
msg "🏁   Done"
