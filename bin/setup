#!/usr/bin/env bash

#   
#       _____      _               
#      / ____|    | |              
#     | (___   ___| |_ _   _ _ __  
#      \___ \ / _ \ __| | | | '_ \ 
#      ____) |  __/ |_| |_| | |_) |
#     |_____/ \___|\__|\__,_| .__/ 
#                           | |    
#                           |_|    
#  f o r   m a c O S   K e y c h a i n
#
#  This script is used to setup all
#  secrets for a customer in the
#  macOS keychain.

# Prepare shell for script execution
set -Eeo pipefail
trap cleanup SIGINT SIGTERM ERR EXIT
[[ "$0" != "$BASH_SOURCE" ]] && EXIT=return || EXIT=exit
cleanup() {
  trap - SIGINT SIGTERM ERR EXIT
  # script cleanup here
}

setup_colors() {
  if [[ -t 2 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
    NOFORMAT='\033[0m' RED='\033[0;31m\033[1m' GREEN='\033[0;32m\033[1m' ORANGE='\033[0;33m\033[1m' BLUE='\033[0;34m\033[1m' PURPLE='\033[0;35m\033[1m' CYAN='\033[0;36m\033[1m' YELLOW='\033[1;33m\033[1m'
  else
    NOFORMAT='' RED='' GREEN='' ORANGE='' BLUE='' PURPLE='' CYAN='' YELLOW=''
  fi
}

msg() {
  echo >&2 -e "${1-}"
}

setup_colors

# Input validation
if [[ -z $CUSTOMER ]]; then
  msg "🛑   Please specify ${GREEN}CUSTOMER$NOFORMAT as an environment variable"
  $EXIT 1
fi

# Load names of environment variables for secrets from file
IFS=$'\n' SECRETS=($(cat .tf_envs))

if ! [[ "$OSTYPE" == "darwin"* ]]; then
  msg "🚨  This script is only supported on macOS"
  $EXIT 1
fi

msg "🔑  Setting up all secrets for $BLUE$(tput bold)$CUSTOMER$NOFORMAT$(tput sgr0) in macOS keychain ..."
msg "    Press ${RED}Enter$NOFORMAT with an empty input to keep the current item in the keychain"

# Iterate over all secrets
for secret in "${SECRETS[@]}"
do
  msg ""
  echo >&2 -n -e "🔤  Enter new value for $YELLOW$(tput bold)${secret}$NOFORMAT$(tput sgr0): "
  read -s secret_value
  echo "$secret_value" | sed 's/./*/g'

  if [[ ! -z "$secret_value" ]]; then
    security add-generic-password -s "$CUSTOMER - Cloud IAC" -a "$secret" -U -w "$secret_value"
    echo -e "✅  Saving $GREEN$(tput bold)${secret}$NOFORMAT$(tput sgr0) for $CUSTOMER to keychain"
  else
    msg "    Skipping $(tput bold)$secret$(tput sgr0)"
  fi
done

msg ""
msg "🔎  Checking secrets ..."

# Iterate over all secrets
for secret in "${SECRETS[@]}"
do
  if [[ -z "$(security find-generic-password -s "$CUSTOMER - Cloud IAC" -a "$secret" -w 2> /dev/null || true)" ]]; then
    msg "🚨  Secret $(tput bold)$secret$(tput sgr0) is not set"
    exit 1
  fi
done

msg "🚀  Everything setup. Your are good to go!"
